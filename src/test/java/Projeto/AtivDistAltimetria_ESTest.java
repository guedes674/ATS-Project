/*
 * This file was automatically generated by EvoSuite
 * Wed Jun 04 15:30:16 GMT 2025
 */

package Projeto;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import Projeto.Btt;
import Projeto.Trail;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.time.ZoneId;
import java.time.ZoneOffset;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockLocalTime;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AtivDistAltimetria_ESTest extends AtivDistAltimetria_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Trail trail0 = new Trail();
      Trail trail1 = new Trail();
      trail0.setAltimetria(2352.214);
      boolean boolean0 = trail0.equals(trail1);
      assertEquals(1.35, trail0.getFatorHard(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Btt btt0 = new Btt();
      String string0 = btt0.toString();
      assertEquals("Atividade\nId: 1\nData e hora: 14/02/2014 20:21:21\nDura\u00E7ao: 00:00\nFrequencia Cardiaca: 0 bpm\nDistancia: 0.0 metros\nAltimetria: 0.0 metros\nTipo de atividade: BTT\n", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Trail trail0 = new Trail();
      trail0.setAltimetria((-731.985993619));
      double double0 = trail0.getFatorAltimetria();
      assertEquals((-731.985993619), trail0.getAltimetria(), 0.01);
      assertEquals((-0.36599299680950004), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LocalTime localTime0 = MockLocalTime.ofNanoOfDay(0L);
      Trail trail0 = new Trail((LocalDateTime) null, localTime0, 1576, 0L, 1576);
      double double0 = trail0.getAltimetria();
      assertEquals(1576.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Btt btt0 = new Btt();
      btt0.setAltimetria((-1602));
      double double0 = btt0.getAltimetria();
      assertEquals((-0.801), btt0.getFatorAltimetria(), 0.01);
      assertEquals((-1602.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Trail trail0 = new Trail();
      trail0.equals((Object) null);
      assertEquals(0.0, trail0.getFatorAltimetria(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Btt btt0 = new Btt();
      double double0 = btt0.getAltimetria();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Btt btt0 = new Btt();
      btt0.setDistancia((-1685));
      Btt btt1 = new Btt();
      boolean boolean0 = btt0.equals(btt1);
      assertFalse(boolean0);
      assertEquals(0.0, btt1.getAltimetria(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ZoneOffset zoneOffset0 = ZoneOffset.UTC;
      LocalTime localTime0 = MockLocalTime.now((ZoneId) zoneOffset0);
      Trail trail0 = new Trail((LocalDateTime) null, localTime0, 3779, (-70.43294053), (-70.43294053));
      Object object0 = trail0.clone();
      // Undeclared exception!
      try { 
        trail0.equals(object0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Projeto.Atividade", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Btt btt0 = new Btt();
      Btt btt1 = new Btt();
      btt1.setAltimetria(2345.461215572442);
      boolean boolean0 = btt0.equals(btt1);
      assertEquals(1.1727306077862212, btt1.getFatorAltimetria(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LocalTime localTime0 = MockLocalTime.of(0, 0, 0, 0);
      Trail trail0 = new Trail((LocalDateTime) null, localTime0, 0, 22.9034, 22.9034);
      // Undeclared exception!
      try { 
        trail0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Projeto.Atividade", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Btt btt0 = new Btt();
      Btt btt1 = new Btt(btt0);
      boolean boolean0 = btt0.equals(btt1);
      assertEquals(0.0, btt1.getFatorAltimetria(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Btt btt0 = new Btt();
      double double0 = btt0.getFatorAltimetria();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Btt btt0 = new Btt();
      btt0.setAltimetria(2345.461215572442);
      double double0 = btt0.getFatorAltimetria();
      assertEquals(2345.461215572442, btt0.getAltimetria(), 0.01);
      assertEquals(1.1727306077862212, double0, 0.01);
  }
}
